version: '3.3'
services:
  teamspeak:
    build: ./ts3
    restart: always
    working_dir: /opt/ts3server/Examples/server
    command: tail -F anything
    ports:
      - '9987:9987/udp'
      - '10011:10011'
      - '30033:30033'
    environment:
      TS3SERVER_DB_PLUGIN: ts3db_mariadb
      TS3SERVER_DB_SQLCREATEPATH: create_mariadb
      TS3SERVER_DB_HOST: db
      TS3SERVER_DB_USER: root
      TS3SERVER_DB_PASSWORD: example
      TS3SERVER_DB_NAME: teamspeak
      TS3SERVER_DB_WAITUNTILREADY: 30
      TS3SERVER_LICENSE: accept
    networks:
      app_net:
        ipv4_address: 192.168.80.26
  db:
    image: mariadb
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: example
      MYSQL_DATABASE: teamspeak
    networks:
      app_net:
        ipv4_address: 192.168.80.28
  hamachi:
    image: gfjardim/hamachi
    volumes:
      - '$HOME/.config/docker/hamachi:/config'
    restart: always
    environment:
      - ACCOUNT=$HAM_USER
      - NETWORK=$HAM_NETWORK
      - PASS=$HAM_PASSWORD
    networks:
      app_net:
        ipv4_address: 192.168.80.27
  bottleneck_tester:
    build: ./traffic_tester
    command: tail -F anything
    networks:
      app_net:
        ipv4_address: 192.168.80.29
    depends_on:
      - mmo-server1
  mmo-server:
    build: ./mmo-server/.
    command: 'bash -c "cd /release/ && ./mmo-server -a  0.0.0.0:8080"'
    ports:
      - '8010:8080/udp'
    links:
      - redis
    environment:
      - REDIS_URL=192.168.1.30:6379
      - VIRTUAL_PORT=8080
      - VIRTUAL_HOST=mmo.htpc
      - RUST_BACKTRACE=full
      - RUST_LOG=info
    networks:
      app_net:
        ipv4_address: 192.168.80.20
  mmo-server1:
    build: ./mmo-server/.
    command: 'bash -c "cd /release/ && ./mmo-server -a  0.0.0.0:8080"'
    ports:
      - '8011:8080/udp'
    environment:
      - VIRTUAL_PORT=8081
      - VIRTUAL_HOST=mmo.htpc
      - RUST_BACKTRACE=1
    networks:
      app_net:
        ipv4_address: 192.168.80.21
  mmo-server2:
    build: ./mmo-server/.
    command: 'bash -c "cd /release/ && ./mmo-server -a  0.0.0.0:8080"'
    ports:
      - '8012:8080/udp'
    environment:
      - VIRTUAL_PORT=8082
      - VIRTUAL_HOST=mmo.htpc
      - RUST_BACKTRACE=1
    networks:
      app_net:
        ipv4_address: 192.168.80.22
  mmo-server3:
    build: ./mmo-server/.
    command: 'bash -c "cd /release/ && ./mmo-server -a  0.0.0.0:8080"'
    ports:
      - '8013:8080/udp'
      - '8080'
    environment:
      - VIRTUAL_PORT=8083
      - VIRTUAL_HOST=mmo.htpc
      - RUST_BACKTRACE=1
    networks:
      app_net:
        ipv4_address: 192.168.80.23
  mmo-server4:
    build: ./mmo-server/.
    command: 'bash -c "cd /release/ && ./mmo-server -a  0.0.0.0:8080"'
    ports:
      - '8014:8080/udp'
      - '8080'
    environment:
      - VIRTUAL_PORT=8084
      - VIRTUAL_HOST=mmo.htpc
      - RUST_BACKTRACE=1
      - RUST_LOG=debug
    networks:
      app_net:
        ipv4_address: 192.168.80.24
  web:
    build: ./web/.
    image: 'nginx:stable-alpine'
    ports:
      - '80:80'
    environment:
      - VIRTUAL_PORT=81
      - VIRTUAL_HOST=mmo.htpc
      - NGINX_HOST=_
      - NGINX_PORT=80
      - MMO_SERVER_PORT=8010-8020
      - MMO_CLIENT_PORT=8081
      - MMO_MUMBLE_PORT=8082
      - MURMUR_PORT=64738
    command: |
      /bin/sh -c ' envsubst < /usr/share/nginx/www/index.html > /usr/share/nginx/html/index.html &&  envsubst < /etc/nginx/conf.d/web.template > /etc/nginx/conf.d/default.conf &&  nginx -g "daemon off;"'
    depends_on:
      - mmo-server
    networks:
      app_net:
        ipv4_address: 192.168.80.25
  redis:
    image: redis
    expose:
      - 6379
    networks:
      app_net:
        ipv4_address: 192.168.80.30
    ports:
      - '6379:6379'
networks:
  app_net:
    ipam:
      config:
        - subnet: 192.168.80.0/24
      driver: default
volumes:
  src: null
  ts-data:
    driver: local
